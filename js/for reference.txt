function generalScatterPlotMileage(fields) {
    $('.result-div').empty();
    //   var url =  `http://10.217.163.111:8080/api/general-scatter-plot-mileage?start-date=${fields[0]}&end-date=${fields[1]}`;
    //     $.getJSON(url)
    //         .done(function (data) {
    //             if (data.length <= 0) {
    //                 alert("No data available")
    //             } else {
    $('.result-div').append(`<canvas id="dataCanvas" height="${$('.result-div').height()}" width="${$('.result-div').width()}"></canvas>`);
    $('#data-table-tbody').height($('.result-div').height());
    var data = gmData;
    var headers = data[0];
    var str = "<tr><th>#</th>";
    Object.keys(headers).forEach(function (k) {
        str += "<th>" + k + "</th>";
    })
    $("#data-table-thead").append(str + "</tr>");

    // data = data.sort(function (a, b) {
    //     return +a['MeanMileage'] - +b['MeanMileage'];
    // });
    var bubbleData = [];
    data.forEach(function (d, i) {
        d['MeanMileage'] = +d['MeanMileage'];
        str = `<tr class='data${i}'><td>${i+1}</td>`

        var point = {};
        point['x'] = d['VehID'];
        point['y'] = d['MeanMileage'];
        point['r'] = 3;
        bubbleData.push(point);

        Object.keys(d).forEach(function (k, i) {
            str += "<td>" + d[k] + "</td>";
        })
        $("#data-table-tbody").append(str + "</tr>");
    });
    var canvas = $("#dataCanvas");
    new Chart(canvas, {
        type: "bubble",
        data: {
            labels: [],
            datasets: [{
                label: "GoodOne",
                data: bubbleData,
                backgroundColor: "#FF6384",
                hoverBackgroundColor: "green",
            }]
        },
        options: {
            elements: {
                points: {
                    borderWidth: 1,
                    borderColor: 'rgb(0, 0, 0)',
                },
                onHover: hoverFunction()
            },
            title: {
                display: true,
                text: 'Howdy'
            },
        }
    });

    // }
    // });
}



function componentBarPlotMttfCritical(fields) {
    $('.result-div').empty();
    //   var url =  `http://10.217.163.77:8080/api/component-bar-plot-mttf-critical?option=${fields[0]}&no-of-rows=${fields[1]}`;
    //     $.getJSON(url)
    //         .done(function (data) {
    //             if (data.length <= 0) {
    //                 alert("No data available")
    //             } else {
    $('.result-div').append(`<canvas id="dataCanvas" height="${$('.result-div').height()}" width="${$('.result-div').width()}"></canvas>`);
    $('#data-table-tbody').height($('.result-div').height());
    var data = cbpmc;
    var headers = data[0];
    var str = "<tr><th>#</th>";
    Object.keys(headers).forEach(function (k) {
        str += "<th>" + k + "</th>";
    })
    $("#data-table-thead").append(str + "</tr>");

    // data = data.sort(function (a, b) {
    //     return +a['MeanMileage'] - +b['MeanMileage'];
    // });
    var barData = [];
    var x_axis_labels = [];
    var backgroundColorArray = [];
    data.forEach(function (d, i) {
        d['MTTF'] = +d['MTTF'];
        str = `<tr class='data${i}'><td>${i+1}</td>`
        x_axis_labels.push(d['MaterialNo']);
        backgroundColorArray.push(getRandomColor());
        barData.push(d['MTTF']);
        Object.keys(d).forEach(function (k, i) {
            str += "<td>" + d[k] + "</td>";
        })
        $("#data-table-tbody").append(str + "</tr>");
    });

    var barData = {
        labels: x_axis_labels,
        datasets: [{
            //label: "My First dataset",
            backgroundColor: backgroundColorArray,
            borderWidth: 1,
            data: barData,
        }]
    };
    var canvas = $("#dataCanvas");
    new Chart(canvas, {
        type: "bar",
        data: barData,
        options: {
            scales: {
                xAxes: [{
                    stacked: true
                }],
                yAxes: [{
                    stacked: true
                }]
            },
            title: {
                display: true,
                text: 'MTTF-CRITICAL'
            }
        }
    });

    // }
    // });
}





x.domain(data.map(function (d, i) {
        return d['MaterialNo'];
    }));

    y.domain([0.1, d3.max(data, function (d) {
        return d[option];
    })]);
    //y.domain([0.1, data[data.length -1]]);

    var div = d3.select("body").append("div")
        .attr("class", "tooltip")
        .style("opacity", 0);

    var g = svg.append("g")
        .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');

    var xaxis = g.append('g')
        .attr('class', 'axis axis--x')
        .style('font-size', '8px')
        .attr('transform', 'translate(0,' + height + ')')
        .call(d3.axisBottom(x));

    xaxis.selectAll("text")
        .attr('x', '-8')
        .attr("transform", "rotate(-60)")
        .attr('text-anchor', 'end')
    // .attr('dy', '.35em')


    xaxis.append('text')
        .attr('fill', '#000')
        .attr('transform', 'translate(' + width / 2 + ',' + margin.bottom + ')')
        .text('Material Number');

    //For Y axis
    g.append('g')
        .attr('class', 'axis axis--y')
        .call(d3.axisLeft(y))
        .append("text")
        .attr('transform', 'translate(-' + margin.left + ',' + height / 2 + ')rotate(-90)')
        .attr('dy', '0.71em')
        .attr('fill', '#000')
        .text(option);

    g.selectAll('.circle')
        .data(data)
        .enter().append('circle')
        .attr('class', function (d, i) {
            return "circle data" + i;
        })
        .attr('style', 'cursor:pointer')
        .attr('fill', getRandomColor())
        .attr('cx', function (d) {
            return x(d['MaterialNo']);
        })
        .attr('cy', function (d) {
            if (d[option] <= 0) {
                return 0;
            } else {
                return y(d[option]);
            }

        })
        .attr('r', 3)
        .on('mouseover', function (d, i) {
            div.transition()
                .duration(200)
                .style("opacity", .9);
            div.html(`<strong>#:</strong><span style='color:blue'>${i+1}</span><br>
                        <strong>${option}:</strong> <span style='color:red'>${d[option]}</span><br>
                        <strong>Material:</strong> <span style='color:red'>${d['MaterialNo']}</span>`)
                .style("left", (d3.event.pageX) + "px")
                .style("top", (d3.event.pageY - 28) + "px");

            var className = $(this).attr('class');
            highlightData(className.split(" ")[1]);
            //$(`#data-table-tbody tr.${className.split(" ")[1]}`)[0].scrollIntoView();

        })
        .on('mouseout', function () {
            div.transition()
                .duration(500)
                .style("opacity", 0);
            var className = $(this).attr('class');
            removeHighlight(className.split(" ")[1]);
        })
    $('.result-div').append(`<h5 style="text-align:center">Sorted on <span style="font-size: 16px; color:red">${option}</span> in <strong>ascending order</strong></h5>`);

    $('[class^=data]').on('mouseover', function () {
        var className = $(this).attr('class');
        highlightData(className.split(" "));
    })
    $('[class^=data]').on('mouseout', function () {
        var className = $(this).attr('class');
        removeHighlight(className.split(" ")[0]);
    })